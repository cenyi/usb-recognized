import React, { useState } from 'react';
import QuickDiagnosticTool from './QuickDiagnosticTool';

/**
 * Demo component to showcase the QuickDiagnosticTool functionality
 */
const DiagnosticToolDemo = () => {
  const [recommendations, setRecommendations] = useState(null);
  const [diagnosticData, setDiagnosticData] = useState(null);
  const [showDetails, setShowDetails] = useState(false);
  
  // Handle recommendations generated by the diagnostic tool
  const handleRecommendationsGenerated = (generatedRecommendations, data) => {
    setRecommendations(generatedRecommendations);
    setDiagnosticData(data);
    console.log('Diagnostic data:', data);
    console.log('Recommendations:', generatedRecommendations);
  };
  
  // Format diagnostic data for display
  const formatDiagnosticData = (data) => {
    if (!data) return null;
    
    return (
      <div className="mt-6 p-4 bg-gray-50 rounded-lg">
        <h3 className="text-lg font-semibold mb-2">Diagnostic Data</h3>
        <pre className="text-xs bg-gray-100 p-3 rounded overflow-auto">
          {JSON.stringify(data, null, 2)}
        </pre>
      </div>
    );
  };
  
  // Format recommendations for display
  const formatRecommendations = (recs) => {
    if (!recs) return null;
    
    return (
      <div className="mt-6 p-4 bg-gray-50 rounded-lg">
        <h3 className="text-lg font-semibold mb-2">Generated Recommendations</h3>
        <div className="text-sm text-gray-600 mb-2">
          Confidence score: {Math.round(recs.confidence * 100)}%
        </div>
        <pre className="text-xs bg-gray-100 p-3 rounded overflow-auto">
          {JSON.stringify(recs, null, 2)}
        </pre>
      </div>
    );
  };
  
  return (
    <div className="max-w-2xl mx-auto">
      <div className="mb-6">
        <h2 className="text-2xl font-bold mb-2">USB Diagnostic Tool Demo</h2>
        <p className="text-gray-600">
          This demo shows how the diagnostic tool works. Answer the questions to get personalized troubleshooting recommendations.
        </p>
      </div>
      
      <QuickDiagnosticTool 
        onRecommendationsGenerated={handleRecommendationsGenerated}
        className="mb-6"
      />
      
      {(recommendations || diagnosticData) && (
        <div className="mt-6">
          <button
            className="text-blue-600 hover:text-blue-800 underline text-sm"
            onClick={() => setShowDetails(!showDetails)}
          >
            {showDetails ? 'Hide' : 'Show'} Technical Details
          </button>
          
          {showDetails && (
            <>
              {formatDiagnosticData(diagnosticData)}
              {formatRecommendations(recommendations)}
            </>
          )}
        </div>
      )}
    </div>
  );
};

export default DiagnosticToolDemo;